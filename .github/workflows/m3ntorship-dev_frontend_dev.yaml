name: deploy pickify-frontend dev to m3ntorship-dev cluster

# trigger
on:
  push:
    branches:
      - deployment
      - develop
env:
  M3_IMAGE: m3ntorshipci/pickify-frontend
  M3_DOCKER_FILE: Dockerfile
  M3_ORGANIZATION: ${{github.event.organization.login}}
  M3_REPOSITORY: ${{github.event.repository.name}}
  M3_PROJECT: pickify
  M3_COMPONENET: frontend
  M3_ENVIRONMENT: dev
  M3_NAMESPACE: '${{github.event.organization.login}}-${{github.event.repository.name}}-dev'
  M3_DEPLOYMENT_PATH: deploy/dev/frontend
  M3_TEMP_DIR: temp
  M3_REPLICAS: '1'
  M3_PORT: '3000'
  M3_MEMORY: '1000Mi'
  M3_CPU: '200m'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      # dynamic deployment envs
      - name: set templating envs
        id: version
        run: |
          echo ::set-output name=version::dev-$(git rev-parse --short=4 ${{ github.sha }})
  build_service:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      M3_VERSION: ${{ needs.prepare.outputs.version }}

    steps:
      # checkout the code commit
      - name: checkout the code
        uses: actions/checkout@v2

      # login to docker
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.M3NTORSHIP_DOCKERHUB_USERNAME }}
          password: ${{ secrets.M3NTORSHIP_DOCKERHUB_PASSWORD }}

      # install dependencies
      - name: install app dependencies
        run: |
          yarn

      # run tests
      - name: run tests
        run: |
          yarn test

      # build and push docker image
      - name: build and push docker image
        run: |
          echo $M3_VERSION
          docker build -t $M3_IMAGE:$M3_VERSION -f $M3_DOCKER_FILE .
          docker push $M3_IMAGE:$M3_VERSION
  deploy_dev:
    needs:
      - build_service
      - prepare

    runs-on: ubuntu-latest
    env:
      M3_VERSION: ${{ needs.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v1
      - name: Kubectl configuration
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d -i > ~/.kube/config
      - name: install moustache
        run: |
          curl -sSL https://git.io/get-mo -o mo
          chmod +x mo
          sudo mv mo /usr/local/bin
          echo "works" | mo

      - name: deployment-preparation
        run: |
          echo $M3_NAMESPACE
          mkdir -p $M3_TEMP_DIR

      - name: bind-k8s-template
        run: |
          for f in $M3_DEPLOYMENT_PATH/apply/*; do mo -u "$f" > $M3_TEMP_DIR/"$(basename $f)"; done
      # deploy everything
      - name: deploy
        run: |
          kubectl apply -f $M3_TEMP_DIR

      #cleanup temp directories
      - name: clean-temp-files
        run: rm -rf $M3_TEMP_DIR
  cleanup_docker_tags:
    needs:
      - deploy_dev
    runs-on: ubuntu-latest
    steps:
      - id: delete_old_tags
        name: Delete old docker image tags
        uses: m3ntorship/action-dockerhub-cleanup@1.2
        with:
          token: ${{secrets.DOCKER_HUB_M3NTORSHIPCI_TOKEN}}
          keep-last: 5
          user: 'm3ntorshipci'
          repos: '["pickify-frontend"]'
          substrings: '["dev-"]'
